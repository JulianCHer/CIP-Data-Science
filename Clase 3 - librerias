{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMegSsO5aJtQmM80mBGwHvt"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vnxx1GJFSIbJ",
        "outputId": "4fe329df-4b1a-4f35-ee36-ec1478803f1c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1 2 3 4]\n",
            "5\n",
            "[[2 3 4]\n",
            " [6 7 8]]\n",
            "[ 9 10 11 12]\n",
            "[ 4  8 12]\n"
          ]
        }
      ],
      "source": [
        "# numpy es la libreria para hacer operaciones matematicas\n",
        "import numpy as np\n",
        "\n",
        "#Creación de matrices en python:\n",
        "#matriz = [ [1,2,3,4] , [5,6,7,8] ] ---> Esta sería una matriz de 2 filas x 4 columnas\n",
        "\n",
        "matriz = np.array([\n",
        "    [1,2,3,4],\n",
        "    [5,6,7,8],\n",
        "    [9,10,11,12]\n",
        "    ])\n",
        "\n",
        "print(matriz[0])\n",
        "print(matriz[1][0])\n",
        "print(matriz[:2,1:])\n",
        "# matriz.max(axis = 0) ----> Me muestra los valores más alto de las columnas existentes\n",
        "# matriz.max(axis = 1) ----> Me muestra los valores más alto de las filas existentes\n",
        "\n",
        "print(matriz.max(axis = 0))\n",
        "print(matriz.max(axis = 1))"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# pandas me permite leer archivos como CSV\n",
        "import pandas as pd\n",
        "\n",
        "# Definimos el diccionario de ejemplo\n",
        "football_dicc = {\n",
        "    \"Player\": [\"Lionel Messi\",\"Cristiano Ronaldo\"],\n",
        "    \"year\" : [2016,2016],\n",
        "    \"goals\": [37,25],\n",
        "}\n",
        "\n",
        "data = pd.DataFrame(football_dicc)\n",
        "print(data)"
      ],
      "metadata": {
        "id": "pSbI89aWWdCn"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}